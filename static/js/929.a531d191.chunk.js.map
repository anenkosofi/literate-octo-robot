{"version":3,"file":"static/js/929.a531d191.chunk.js","mappings":"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","sources":["assets/check.svg","components/AdditionalInfo/index.tsx","components/BillingInfo/index.tsx","components/Confirmation/index.tsx","components/CheckoutForm/index.tsx","pages/CheckoutPage/index.tsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgCheck(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 10,\n    viewBox: \"0 0 14 10\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.55957 5.85003L4.61957 8.91003L12.4396 1.09003\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheck);\nexport default __webpack_public_path__ + \"static/media/check.b30c1d54bc34bb31e97302037512dffa.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC } from 'react';\r\nimport { UseFormRegister } from 'react-hook-form';\r\n\r\nimport { FormValues } from '@types';\r\n\r\nimport './AdditionalInfo.scss';\r\n\r\ntype AdditionalInfoProps = {\r\n  register: UseFormRegister<FormValues>;\r\n};\r\n\r\nexport const AdditionalInfo: FC<AdditionalInfoProps> = ({ register }) => {\r\n  return (\r\n    <div className=\"info\">\r\n      <h2 className=\"form__title\">Additional informations</h2>\r\n      <p className=\"form__description\">\r\n        Need something else? We will make it for you!\r\n      </p>\r\n      <div className=\"billing__field info__field\">\r\n        <textarea\r\n          id=\"notes\"\r\n          placeholder=\"Need a specific delivery day? Sending a gitf? Let’s say ...\"\r\n          className=\"billing__input info__input\"\r\n          {...register('notes')}\r\n        />\r\n        <p className=\"billing__label info__label\">Order notes</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Country, City } from 'country-state-city';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport {\r\n  UseFormRegister,\r\n  FieldErrors,\r\n  Controller,\r\n  Control,\r\n} from 'react-hook-form';\r\nimport Select, { StylesConfig } from 'react-select';\r\n\r\nimport { FormValues } from '@types';\r\n\r\nimport './BillingInfo.scss';\r\n\r\ntype BillingInfoProps = {\r\n  register: UseFormRegister<FormValues>;\r\n  watch: (name: string) => string;\r\n  errors: FieldErrors<FormValues>;\r\n  control: Control<FormValues>;\r\n};\r\n\r\ntype OptionType = {\r\n  label: string;\r\n  value: string;\r\n  code?: string;\r\n};\r\n\r\nexport const BillingInfo: FC<BillingInfoProps> = ({\r\n  register,\r\n  watch,\r\n  errors,\r\n  control,\r\n}) => {\r\n  const [countryValue, setCountryValue] = useState<string | null>(null);\r\n  const [cityOptions, setCityOptions] = useState<\r\n    [] | { label: string; value: string }[]\r\n  >([]);\r\n\r\n  const countries = Country.getAllCountries();\r\n  const countryOptions = countries.map(country => ({\r\n    label: country.name,\r\n    value: country.name,\r\n    code: country.isoCode,\r\n  }));\r\n  const allCities = City.getAllCities();\r\n\r\n  const selectStyles: StylesConfig<OptionType, false> = {\r\n    control: (baseStyles, state) => ({\r\n      ...baseStyles,\r\n      height: 44,\r\n      padding: '11px 16px 12px 21px',\r\n      backgroundColor: '#f9f9f9',\r\n      borderRadius: 12,\r\n      border: state.menuIsOpen ? '1px solid #6a983c' : '1px solid #d1d1d1',\r\n      boxShadow: 'none',\r\n      '&:hover': {\r\n        border: '1px solid #6a983c',\r\n      },\r\n    }),\r\n    valueContainer: baseStyles => ({\r\n      ...baseStyles,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      margin: 0,\r\n      padding: 0,\r\n    }),\r\n    placeholder: baseStyles => ({\r\n      ...baseStyles,\r\n      margin: 0,\r\n      fontFamily: 'Open Sans',\r\n      fontWeight: 400,\r\n      fontSize: 14,\r\n      lineHeight: 1.36,\r\n      color: '#a9a9a9',\r\n    }),\r\n    input: baseStyles => ({\r\n      ...baseStyles,\r\n      margin: 0,\r\n      padding: 0,\r\n    }),\r\n    menu: baseStyles => ({\r\n      ...baseStyles,\r\n      fontFamily: 'Open Sans',\r\n      fontWeight: 400,\r\n      fontSize: 14,\r\n      lineHeight: 1.36,\r\n      border: '1px solid #6a983c',\r\n      borderRadius: 4,\r\n      overflow: 'hidden',\r\n    }),\r\n    menuList: baseStyles => ({\r\n      ...baseStyles,\r\n      backgroundColor: '#f4f8ec',\r\n    }),\r\n    indicatorsContainer: baseStyles => ({\r\n      ...baseStyles,\r\n      width: 20,\r\n      height: 20,\r\n      padding: 0,\r\n    }),\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      backgroundColor: state.isSelected\r\n        ? '#6a983c'\r\n        : state.isFocused\r\n        ? '#d1d1d1'\r\n        : 'transparent',\r\n      color: state.isSelected ? '#ffffff' : 'inherit',\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        backgroundColor: state.isSelected ? '#6a983c' : '#d1d1d1',\r\n        color: state.isSelected ? '#ffffff' : 'inherit',\r\n      },\r\n    }),\r\n    singleValue: provided => ({\r\n      ...provided,\r\n      fontFamily: 'Open Sans',\r\n      fontWeight: 400,\r\n      fontSize: 14,\r\n      lineHeight: 1.36,\r\n      color: 'inherit',\r\n    }),\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (countryValue) {\r\n      const cities = allCities.filter(\r\n        city => city.countryCode === countryValue\r\n      );\r\n      const options = cities.map(city => ({\r\n        label: city.name,\r\n        value: city.name,\r\n      }));\r\n      setCityOptions(options);\r\n    }\r\n  }, [countryValue]);\r\n\r\n  return (\r\n    <div className=\"billing\">\r\n      <h1 className=\"form__title\">Billing info</h1>\r\n      <p className=\"form__description\">Please enter your billing info</p>\r\n      <div className=\"billing__info\">\r\n        <div className=\"billing__field\">\r\n          <input\r\n            id=\"firstName\"\r\n            type=\"text\"\r\n            placeholder=\"First name\"\r\n            className=\"billing__input\"\r\n            {...register('firstName')}\r\n          />\r\n          <label htmlFor=\"firstName\" className=\"billing__label\">\r\n            First name\r\n          </label>\r\n          {errors.firstName && (\r\n            <p role=\"alert\" className=\"form__error\">\r\n              {errors.firstName.message}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className=\"billing__field\">\r\n          <input\r\n            id=\"lastName\"\r\n            type=\"text\"\r\n            placeholder=\"Last name\"\r\n            className=\"billing__input\"\r\n            {...register('lastName')}\r\n          />\r\n          <label htmlFor=\"lastName\" className=\"billing__label\">\r\n            Last name\r\n          </label>\r\n          {errors.lastName && (\r\n            <p role=\"alert\" className=\"form__error\">\r\n              {errors.lastName.message}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className=\"billing__field\">\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email address\"\r\n            className=\"billing__input\"\r\n            {...register('email')}\r\n          />\r\n          <label htmlFor=\"email\" className=\"billing__label\">\r\n            Email address\r\n          </label>\r\n          {errors.email && (\r\n            <p role=\"alert\" className=\"form__error\">\r\n              {errors.email.message}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className=\"billing__field\">\r\n          <input\r\n            id=\"phone\"\r\n            type=\"tel\"\r\n            placeholder=\"Phone number\"\r\n            className=\"billing__input\"\r\n            {...register('phone')}\r\n          />\r\n          <label htmlFor=\"phone\" className=\"billing__label\">\r\n            Phone number\r\n          </label>\r\n          {errors.phone && (\r\n            <p role=\"alert\" className=\"form__error\">\r\n              {errors.phone.message}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className=\"billing__field\">\r\n          <Controller\r\n            name=\"address.country\"\r\n            control={control}\r\n            render={({ field: { onChange, value } }) => (\r\n              <Select\r\n                classNamePrefix=\"select\"\r\n                styles={selectStyles}\r\n                placeholder=\"Choose a state or Country\"\r\n                options={countryOptions}\r\n                value={countryOptions.find(country => country.value === value)}\r\n                onChange={selectedOption => {\r\n                  if (selectedOption && selectedOption.code) {\r\n                    setCountryValue(selectedOption.code);\r\n                  }\r\n                  onChange(selectedOption?.value);\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          <label htmlFor=\"country\" className=\"billing__label\">\r\n            State / Country\r\n          </label>\r\n          {errors.address && errors.address.country && (\r\n            <p role=\"alert\" className=\"form__error\">\r\n              {errors.address.country.message}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className=\"billing__field\">\r\n          <Controller\r\n            name=\"address.town\"\r\n            control={control}\r\n            render={({ field: { onChange, value } }) => (\r\n              <Select\r\n                classNamePrefix=\"select\"\r\n                styles={selectStyles}\r\n                isDisabled={!watch('address.country')}\r\n                placeholder=\"Town or city\"\r\n                options={cityOptions}\r\n                value={cityOptions.find(city => city.value === value)}\r\n                onChange={selectedOption => {\r\n                  onChange(selectedOption?.value);\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          <label htmlFor=\"town\" className=\"billing__label\">\r\n            Town / City\r\n          </label>\r\n          {errors.address && errors.address.town && (\r\n            <p role=\"alert\" className=\"form__error\">\r\n              {errors.address.town.message}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className=\"billing__field\">\r\n          <input\r\n            id=\"address\"\r\n            type=\"text\"\r\n            placeholder=\"Address\"\r\n            className=\"billing__input\"\r\n            {...register('address.apartment')}\r\n          />\r\n          <label htmlFor=\"address\" className=\"billing__label\">\r\n            Address\r\n          </label>\r\n          {errors.address && errors.address.apartment && (\r\n            <p role=\"alert\" className=\"form__error\">\r\n              {errors.address.apartment.message}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className=\"billing__field\">\r\n          <input\r\n            id=\"zip\"\r\n            type=\"text\"\r\n            placeholder=\"Postal code or ZIP\"\r\n            className=\"billing__input\"\r\n            {...register('address.zip')}\r\n          />\r\n          <label htmlFor=\"zip\" className=\"billing__label\">\r\n            ZIP/Postal code\r\n          </label>\r\n          {errors.address && errors.address.zip && (\r\n            <p role=\"alert\" className=\"form__error\">\r\n              {errors.address.zip.message}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { UseFormRegister, FieldErrors } from 'react-hook-form';\r\n\r\nimport { ReactComponent as Check } from '@assets/check.svg';\r\nimport { FormValues } from '@types';\r\n\r\nimport './Confirmation.scss';\r\n\r\ntype ConfirmationProps = {\r\n  register: UseFormRegister<FormValues>;\r\n  watch: (name: string) => boolean;\r\n  errors: FieldErrors<FormValues>;\r\n  isValid: boolean;\r\n};\r\n\r\nexport const Confirmation: FC<ConfirmationProps> = ({\r\n  register,\r\n  errors,\r\n  watch,\r\n  isValid,\r\n}) => {\r\n  return (\r\n    <div className=\"confirm\">\r\n      <h2 className=\"form__title\">Confirmation</h2>\r\n      <p className=\"form__description\">\r\n        We are getting to the end. Just few clicks and your order si ready!\r\n      </p>\r\n      <div className=\"confirm__info\">\r\n        <div className=\"confirm__field\">\r\n          <label htmlFor=\"sending\" className=\"confirm__label\">\r\n            <input\r\n              id=\"sending\"\r\n              type=\"checkbox\"\r\n              className=\"confirm__input\"\r\n              {...register('confirmation.sending')}\r\n              defaultChecked={watch('confirmation.sending')}\r\n            />\r\n            <span className=\"confirm__checkbox\">\r\n              <Check className=\"confirm__icon\" />\r\n            </span>\r\n            <span>\r\n              I agree with sending an Marketing and newsletter emails. No spam,\r\n              promissed!\r\n            </span>\r\n          </label>\r\n          {errors.confirmation && errors.confirmation.sending && (\r\n            <p role=\"alert\" className=\"form__error\">\r\n              {errors.confirmation.sending.message}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className=\"confirm__field\">\r\n          <label htmlFor=\"agreement\" className=\"confirm__label\">\r\n            <input\r\n              id=\"agreement\"\r\n              type=\"checkbox\"\r\n              className=\"confirm__input\"\r\n              {...register('confirmation.agreement')}\r\n              defaultChecked={watch('confirmation.agreement')}\r\n            />\r\n            <span className=\"confirm__checkbox\">\r\n              <Check className=\"confirm__icon\" />\r\n            </span>\r\n            <span>\r\n              I agree with our&nbsp;\r\n              <span className=\"confirm__label_underlined\">\r\n                terms and conditions\r\n              </span>\r\n              &nbsp;and&nbsp;\r\n              <span className=\"confirm__label_underlined\">privacy policy</span>.\r\n            </span>\r\n          </label>\r\n          {errors.confirmation && errors.confirmation.agreement && (\r\n            <p role=\"alert\" className=\"form__error\">\r\n              {errors.confirmation.agreement.message}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" className=\"form__button\" disabled={!isValid}>\r\n        Complete order\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { DevTool } from '@hookform/devtools';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { z } from 'zod';\r\n\r\nimport { AdditionalInfo } from '@components/AdditionalInfo';\r\nimport { BillingInfo } from '@components/BillingInfo';\r\nimport { Confirmation } from '@components/Confirmation';\r\nimport { FormValues } from '@types';\r\n\r\nimport './CheckoutForm.scss';\r\n\r\nconst schema = z.object({\r\n  firstName: z.string().nonempty('This field is required.'),\r\n  lastName: z.string().nonempty('This field is required.'),\r\n  email: z\r\n    .string()\r\n    .nonempty('This field is required')\r\n    .email('Invalid email format.'),\r\n  phone: z.string().nonempty('This field is required.'),\r\n  address: z.object({\r\n    country: z.string().nonempty('This field is required.'),\r\n    town: z.string().nonempty('This field is required.'),\r\n    apartment: z.string().nonempty('This field is required.'),\r\n    zip: z.string().nonempty('This field is required.'),\r\n  }),\r\n  notes: z.string().optional(),\r\n  confirmation: z.object({\r\n    sending: z.boolean().refine(value => value, {\r\n      message: 'This field must be checked.',\r\n    }),\r\n    agreement: z.boolean().refine(value => value, {\r\n      message: 'This field must be checked.',\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const CheckoutForm: FC = () => {\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors, isValid, isSubmitSuccessful },\r\n    watch,\r\n    reset,\r\n  } = useForm<FormValues>({\r\n    defaultValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      address: {\r\n        apartment: '',\r\n        town: '',\r\n        country: '',\r\n        zip: '',\r\n      },\r\n      notes: '',\r\n      confirmation: {\r\n        sending: false,\r\n        agreement: false,\r\n      },\r\n    },\r\n    resolver: zodResolver(schema),\r\n    mode: 'onTouched',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isSubmitSuccessful) {\r\n      reset();\r\n    }\r\n  }, [isSubmitSuccessful, reset]);\r\n\r\n  const onSubmitHandler = (data: FormValues) => {\r\n    console.log('form submitted', data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className=\"form\"\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        onSubmit={handleSubmit(onSubmitHandler)}\r\n      >\r\n        <BillingInfo\r\n          register={register}\r\n          watch={watch}\r\n          errors={errors}\r\n          control={control}\r\n        />\r\n        <AdditionalInfo register={register} />\r\n        <Confirmation\r\n          register={register}\r\n          watch={watch}\r\n          errors={errors}\r\n          isValid={isValid}\r\n        />\r\n      </form>\r\n      <DevTool control={control} />\r\n    </>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\n\r\nimport { CheckoutForm } from '@components/CheckoutForm';\r\nimport { Container } from '@components/Container';\r\n\r\nimport './CheckoutPage.scss';\r\n\r\nconst CheckoutPage: FC = () => {\r\n  return (\r\n    <section className=\"checkout\">\r\n      <Container>\r\n        <div className=\"checkout__layout\">\r\n          <CheckoutForm />\r\n        </div>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n"],"names":["_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCheck","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","AdditionalInfo","register","_jsxs","className","children","_jsx","_objectSpread","placeholder","BillingInfo","watch","errors","control","_useState","useState","_useState2","_slicedToArray","countryValue","setCountryValue","_useState3","_useState4","cityOptions","setCityOptions","countryOptions","Country","map","country","label","name","value","code","isoCode","allCities","City","selectStyles","baseStyles","state","padding","backgroundColor","borderRadius","border","menuIsOpen","boxShadow","valueContainer","display","alignItems","margin","fontFamily","fontWeight","fontSize","lineHeight","color","input","menu","overflow","menuList","indicatorsContainer","option","provided","isSelected","isFocused","cursor","singleValue","useEffect","cities","filter","city","countryCode","options","type","htmlFor","firstName","role","message","lastName","email","phone","Controller","render","_ref2","_ref2$field","field","onChange","Select","classNamePrefix","styles","find","selectedOption","address","_ref3","_ref3$field","isDisabled","town","apartment","zip","Confirmation","isValid","defaultChecked","Check","confirmation","sending","agreement","disabled","schema","z","nonempty","notes","optional","refine","CheckoutForm","_useForm","useForm","defaultValues","resolver","zodResolver","mode","handleSubmit","_useForm$formState","formState","isSubmitSuccessful","reset","_Fragment","autoComplete","noValidate","onSubmit","data","console","log","DevTool","Container"],"sourceRoot":""}